package todo

import (
	"fmt"
	"eltimn/todo-plus/models"
)

// func markAllClassName(activeCount int) string {
// 	if activeCount > 0 {
// 		return "visible"
// 	}
// 	return "invisible hidden"
// }

// func toggleUrl(ID primitive.ObjectID) string {
// 	return fmt.Sprintf("/todo/toggle-completed/%s", ID.Hex())
// }
templ todoList(items []models.Todo, activeCount int) {
	// <table class="table-auto">
	// 	<tbody>
	// 		for _, item := range items {
	// 			// <li class="flex justify-between gap-x-6 py-5">
	// 			// 	<div class="flex min-w-0 gap-x-4">
	// 			// 		<img
	// 			// 			class="h-12 w-12 flex-none rounded-full bg-gray-50"
	// 			// 			src="https://images.unsplash.com/photo-1494790108377-be9c29b29330?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80"
	// 			// 			alt=""
	// 			// 		/>
	// 			// 		<div class="min-w-0 flex-auto">
	// 			// 			<p class="text-sm font-semibold leading-6 text-gray-900">Leslie Alexander</p>
	// 			// 			<p class="mt-1 truncate text-xs leading-5 text-gray-500">leslie.alexander@example.com</p>
	// 			// 		</div>
	// 			// 	</div>
	// 			// 	<div class="hidden shrink-0 sm:flex sm:flex-col sm:items-end">
	// 			// 		<p class="text-sm leading-6 text-gray-900">{ item.PlainText }</p>
	// 			// 		<p class="mt-1 text-xs leading-5 text-gray-500">Last seen <time datetime="2023-01-23T13:23Z">3h ago</time></p>
	// 			// 	</div>
	// 			// </li>
	// 			// <form hx-post="/todo/create" hx-target="#todos" hx-swap="outerHTML" hx-target-error="previous .error">
	// 			<tr>
	// 				<td><input id="toggle-todo" type="checkbox" checked?={ item.IsCompleted } class="checkbox" hx-patch={ fmt.Sprintf("/todo/toggle-completed/%s", item.ID.Hex()) } hx-target="#todos" hx-swap="outerHTML"/></td>
	// 				<td>{ item.PlainText }</td>
	// 				<td><button title="Remove Todo"></button></td>
	// 			</tr>
	// 			// <li id="todo-items">
	// 			// 	<div>
	// 			// 		<label for="toggle-todo">Toggle Todo</label>
	// 			// 		<input id="toggle-todo" type="checkbox" checked?={ item.IsCompleted } class="checkbox"/>
	// 			// 		<span tabindex="0">{ item.PlainText }</span>
	// 			// 		<button title="Remove Todo"></button>
	// 			// 	</div>
	// 			// 	<div>
	// 			// 		<label for="edit-todo">Edit todo</label>
	// 			// 		<input id="edit-todo"/>
	// 			// 	</div>
	// 			// </li>
	// 		}
	// 	</tbody>
	// </table>
	// <ul role="list" class="divide-y divide-gray-100">
	// 	for _, item := range items {
	// 		<li class="flex justify-between gap-x-6 py-4">
	// 			<div class="flex min-w-0 gap-x-4">
	// 				<input type="checkbox" checked?={ item.IsCompleted } class="checkbox" hx-patch={ fmt.Sprintf("/todo/toggle-completed/%s", item.ID.Hex()) } hx-target="#todos" hx-swap="outerHTML"/>
	// 				<div class="min-w-0 flex-auto">
	// 					<p class="text-lg leading-6 text-gray-900">{ item.PlainText }</p>
	// 				</div>
	// 			</div>
	// 			<div class="hidden shrink-0 sm:flex sm:flex-col sm:items-end">
	// 				<p class="text-sm leading-6 text-gray-900">
	// 					<button hx-delete={ fmt.Sprintf("/todo/%s", item.ID.Hex()) } hx-target="#todos" hx-swap="outerHTML" hx-confirm="Are you sure you want to delete this todo?">X</button>
	// 				</p>
	// 			</div>
	// 		</li>
	// 	}
	// </ul>
	<div class="overflow-x-auto">
		<table class="table table-zebra table-lg">
			<thead>
				<tr>
					<td>
						<input type="checkbox" class="checkbox" hx-post={ fmt.Sprintf("/todo/toggle-all/%d", activeCount) } hx-target="#todos" hx-swap="outerHTML"/>
					</td>
					<td>
						Toggle all.
					</td>
					<td>&nbsp;</td>
				</tr>
			</thead>
			<tbody>
				for _, item := range items {
					<tr>
						<td><input type="checkbox" class="checkbox" checked?={ item.IsCompleted } hx-patch={ fmt.Sprintf("/todo/toggle-completed/%s", item.ID.Hex()) } hx-target="#todos" hx-swap="outerHTML"/></td>
						<td>{ item.PlainText }</td>
						<td><button title="Remove Todo" hx-delete={ fmt.Sprintf("/todo/%s", item.ID.Hex()) } hx-target="#todos" hx-swap="outerHTML" hx-confirm="Are you sure you want to remove this todo?">X</button></td>
					</tr>
				}
			</tbody>
		</table>
	</div>
}
